-- Skrip Webhook Khusus dengan GUI Disesuaikan
local HttpService = game:GetService("HttpService")

-- Tetapkan URL webhook anda di sini (ganti dengan URL sebenar anda)
local webhookUrl = "https://discord.com/api/webhooks/1343229578407051265/na0xo9bkT1VOEDMGTxPENb0XSpAE2_1fXa4JkxI-2GFbx2geNX0ar_-Yfy4tctfsj-L8"
-- Catatan: Jangan kongsi URL ini di tempat awam kerana ia boleh disalahgunakan.

-- Data statistik (anda boleh ubah nilai ini mengikut keperluan)
local FishCaught = 2553 -- Jumlah ikan yang ditangkap
local FishLost = 0     -- Jumlah ikan yang hilang
local CatchTime = 20.813 -- Masa untuk menangkap ikan (dalam saat)
local Runtime = 1263    -- Masa operasi dalam saat (contoh: 21m 03s = 1263 saat)
local CurrentTime = os.date("!%H:%M:%S", os.time()) -- Masa semasa dalam format 24-jam (contoh: 06:43:57)

-- Fungsi untuk mengira masa dalam format HH:MM:SS
local function toHMS(seconds)
    return string.format("%02i:%02i:%02i", seconds / 3600, (seconds / 60) % 60, seconds % 60)
end

-- Fungsi untuk mengira peratusan Catch Rate
local function calculateCatchRate(caught, lost)
    if caught + lost == 0 then return "0.000%" end
    local rate = (caught / (caught + lost)) * 100
    return string.format("%.3f%%", rate)
end

-- Membangunkan payload JSON untuk webhook Discord
local payload = {
    embeds = {
        {
            color = 15258703, -- Warna kuning oren (sesuai dengan gambar)
            fields = {
                {name = "Catch Rate", value = FishCaught .. " / " .. FishLost .. " (" .. calculateCatchRate(FishCaught, FishLost) .. ")", inline = true},
                {name = "Fish Caught", value = "Fish was Caught!", inline = true},
                {name = "Fish took " .. CatchTime .. "s to catch.", value = "", inline = true},
                {name = "Runtime", value = toHMS(Runtime), inline = true},
                {name = "Time", value = CurrentTime, inline = true}
            },
            footer = {text = CurrentTime}
        }
    }
}

-- Fungsi untuk menghantar webhook
local function sendWebhook()
    print("Mencuba menghantar webhook ke: " .. webhookUrl)
    local jsonPayload = HttpService:JSONEncode(payload)
    print("Payload: " .. jsonPayload)
    local success, err = pcall(function()
        HttpService:PostAsync(
            webhookUrl,
            jsonPayload,
            Enum.HttpContentType.ApplicationJson
        )
    end)
    if success then
        print("Webhook berjaya dihantar!")
    else
        warn("Ralat menghantar webhook: " .. tostring(err))
    end
end

-- Memuatkan GUI LIB yang disesuaikan
local GuiLib = loadstring([[
    -- Salin keseluruhan kod GUI LIB di atas ke sini
    -- (Buang baris ini dan masukkan kod GUI Lib yang disediakan di atas)
]])()

-- Mencipta GUI jika GuiLib dimuatkan
if GuiLib then
    print("GUI LIB dimuatkan dengan jayanya!")
    local UI = GuiLib:CreateWindow("Webhook Tester", "v1.0")
    local Main = UI:addPage("Main", 1, true)
    Main.addButton("Send Webhook", function()
        sendWebhook()
    end)
    Main.addLabel("Status", "Klik butang untuk menghantar webhook", "Center")
else
    warn("Gagal memuatkan GUI LIB!")
end
